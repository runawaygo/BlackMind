// Generated by CoffeeScript 1.2.1-pre
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  define(function(require, exports) {
    var BaseView;
    exports.template = function(elementId) {
      return _.template($(elementId).html().trim());
    };
    exports.later = function(action, delta) {
      if (delta == null) delta = 0;
      return setTimeout(action, delta);
    };
    exports.getRandomBetween = function(l, r) {
      r = Math.random() * (r - l) + l;
      return Math.round(r);
    };
    exports.createUUID = function() {
      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
        var r, v;
        r = Math.random() * 16 | 0;
        v = c === 'x' ? r : r & 0x3 | 0x8;
        return v.toString(16);
      });
    };
    BaseView = (function(_super) {

      __extends(BaseView, _super);

      BaseView.name = 'BaseView';

      function BaseView() {
        this._remove = __bind(this._remove, this);
        return BaseView.__super__.constructor.apply(this, arguments);
      }

      BaseView.prototype._remove = function() {
        this.undelegateEvents();
        this.$el.remove();
        return this;
      };

      BaseView.prototype._wrap = function(obj) {
        return _.extend({}, this.options, obj);
      };

      return BaseView;

    })(Backbone.View);
    exports.BaseView = BaseView;
    return exports;
  });

}).call(this);
